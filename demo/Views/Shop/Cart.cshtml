@model List<demo.Model.OrderDetail>
@using PagedList.Mvc;
@using demo.Model;
@{
    ViewBag.Title = "Cart";
}

@using demo.Controllers;

@{ var user = Session["User"] as User; }

@{ Html.RenderAction("HeaderMenu", "Shop");}
<div class="home-Menu row">
    <div class="Cart-menu">
        <ul class="nav navbar-nav center_nav pull-right">
            @{
                if (!(user is null) && user.isAdmin == false)
                {
                    <li class="nav-item control Active">
                        <a class="nav-link" href="/Shop/Cart">Giỏ Hàng</a>
                    </li>
                }
            }
            <li class="nav-item control">
                <a href="/Shop/CartStatus?status=Wait" class="nav-link">Chờ xác nhận</a>
            </li>
            <li class="nav-item control">
                <a href="/Shop/CartStatus?status=Delivery" class="nav-link">Đang giao</a>
            </li>
            <li class="nav-item control">
                <a href="/Shop/CartStatus?status=Finish" class="nav-link">Đã giao</a>
            </li>
            <li class="nav-item control">
                <a href="/Shop/CartStatus?status=Cancel" class="nav-link">Đã hủy</a>
            </li>
        </ul>

    </div>
</div>
<div class="container">
    <div class="row">
        <div id="cart" class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <!-- Begin empty cart -->
            <div class="row">
                <div id="layout-page" class="col-md-12 col-sm-12 col-xs-12" margin-left:10px">
                    <span class="header-page clearfix">
                        <h1 style="color:black">
                            Giỏ hàng
                        </h1>
                    </span>



                    @{
                        if (Model.Count > 0)
                        {
                            <table id="tb1" class="table table-hover">

                                <thead>
                                    <tr>
                                        <th style="text-align: center;">Ảnh SP</th>
                                        <th style="text-align: center;">Mã SP</th>
                                        <th style="text-align: center;">Tên SP</th>
                                        <th style="text-align: center;">Số lượng</th>
                                        <th style="text-align: center;">Đơn giá</th>
                                        <th style="text-align: center;">Thành tiền</th>
                                        <th style="text-align: center;"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        var temp = (item.Product.Price.GetValueOrDefault(0) * item.Quantity);
                                        <tr class="onRow">
                                            @{
                                                byte[] imgBytes = item.Product.Image;
                                                string image = System.Text.Encoding.ASCII.GetString(imgBytes);
                                            }

                                            <td style="width: 15%;text-align:center;">@Html.Image(image, "Alternate Text", "100", "150")</td>
                                            <td style="width:5% ;text-align:center;">@item.Product.ID</td>
                                            <td style="width: 40%;text-align:center;">@item.Product.Name</td>
                                            <td style="width: 5%;"><input style="border:none;text-align:center;" type="number" min="1" max="@item.Product.Quantity" class="txtquantity" id="quantity" data-id="@item.Product.ID" value="@item.Quantity" onchange="changeHandler()" /></td>
                                            <td style="width: 15%;text-align:center;" id="price">@(item.Product.Price.GetValueOrDefault(0).ToString("N0"))</td>
                                            <td style="width: 15%;text-align:center;" id="totalprice">@(((float)temp).ToString("N0"))</td>
                                            <td style="width: 5%;text-align:center;"><div class="Deletepro"><a href="#" data-id="@item.Product.ID">Xóa</a></div></td>
                                        </tr>

                                    }
                                </tbody>
                            </table>

                        }
                        else
                        {
                            {
                                <p class="text-center">
                                    Không có sản phẩm nào trong giỏ hàng!
                                </p>
                            }
                        }
                    }




                    @{float total = 0; }
                    @foreach (var item in Model)
                    {
                        total += (float)(item.Product.Price.GetValueOrDefault(0) * item.Quantity);


                    }
                    <div>Tổng tiền hàng : @total.ToString("N0") đ</br></div>


                    <div class="row">

                        <button id="btnPayment" style=" margin-left: 50px; margin-top: 50px; float: right; width: 12%; height: 40px;" class="btn">Thanh toán</button>
                        <button id="btnUpdate" style=" margin-left: 50px; margin-top: 50px; float: right; width: 12%; height: 40px;" class="btn">Cập nhật giỏ hàng</button>
                        <button id="btnDeleteAll" style=" margin-left: 50px; margin-top: 50px; float: right; width: 12%; height: 40px;" class="btn">Xoá giỏ hàng</button>
                        <div class="col-md-12 col-sm-12  col-xs-12 continue-shop">
                            <a href="~/Shop/Home"><i class="fa fa-reply"></i>Tiếp tục mua hàng</a>
                        </div>
                    </div>

                </div>
            </div>
            <!-- End cart -->
        </div>
    </div>
</div>
@{ Html.RenderAction("Footer", "Shop");}
<script>
            $(document).ready(function () {
                @{shopEntities _db = new shopEntities();}

                $('.Deletepro').click(function (e)
                {
                       const current = e.currentTarget;
                       var r = confirm("Bạn có chắc chắn muốn xóa sản phẩm này không?");
                       if (r == true) {
                        $.ajax({
                           data: { ID: current.children[0].dataset.id },
                            url: '/Shop/Delete',
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                    if (res.status == true) {
                                        window.location.href = "/Shop/Cart";
                                    }
                                }
                            })
                    }
                    });
                $('#btnDeleteAll').click(function () {
                        var r = confirm("Bạn có chắc chắn muốn xóa toàn bộ giỏ hàng không?");
                        if (r == true) {
                        $.ajax({
                            url: '/Shop/DeleteAll',
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                    if (res.status == true) {
                                        window.location.href = "/Shop/Cart";
                                    }
                                }
                            })
                    }
                    });
                $('#btnUpdate').click(function () {
                        var r = confirm("Bạn có chắc chắn muốn cập nhập giỏ hàng?");
                        if (r == true) {
                            var listProduct = $('.txtquantity');
                            var cartList = [];
                        $.each(listProduct, function (i, item) {
                                cartList.push({
                                Quantity: $(item).val(),
                                Product: {
                                    ID: $(item).data('id')
                                }
                                });
                            });
                        $.ajax({
                            url: '/Shop/Update',
                            data: { cartModel: JSON.stringify(cartList) },
                            dataType: 'json',
                            type: 'POST',
                            success: function (res) {
                                    if (res.status == true) {
                                        window.location.href = "/Shop/Cart";
                                    }
                                }
                            })
                    }
                    });
                $('#btnPayment').click(function () {

                        window.location.href = "/Shop/Payment";
                });

                //$('#tb1 tr').click(function (e) {
                //    var pro = $(this).closest('.onRow').find('td:nth-child(2)').text();
                //    $('#quantity').keyup(function () {
                //        var sl = Number(product.Quantity);
                //        alert(sl)
                //        if (Number($(this).text) > sl) {
                //            this.text = sl;
                //        }
                //        });

                //});

            });

</script>